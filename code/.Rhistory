scale_y_continuous(breaks = scales::pretty_breaks(n = 4), limits = c(-8.66, -8.54))
plot_semcoh <- ggplot(data = searchK_data$results, aes(x = K, y = semcoh)) +
geom_line() +
geom_point() +
labs(y = "semantic coherence") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold"))
plot_exclus <- ggplot(data = searchK_data$results, aes(x = K, y = exclus)) +
geom_line() +
geom_point() +
labs(y = "exclusivity") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold"))
plot_residual <- ggplot(data = searchK_data$results, aes(x = K, y = residual)) +
geom_line() +
geom_point() +
labs(y = "residuals") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold"))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4), limits = c(-8.66, -8.50))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4), limits = c(-8.66, -8.53))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4), limits = c(-8.67, -8.53))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4), limits = c(-8.67, -8.52))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5), limits = c(-8.67, -8.52))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5), limits = c(-8.66, -8.53))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
# plot four metrics used for hyperparameter search
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 3), limits = c(-8.65, -8.55))
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
plot_heldout <- ggplot(data = searchK_data$results, aes(x = K, y = heldout)) +
geom_line() +
geom_point() +
labs(y = "held-out likelihood") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4), limits = c(-8.66, -8.53))
plot_semcoh <- ggplot(data = searchK_data$results, aes(x = K, y = semcoh)) +
geom_line() +
geom_point() +
labs(y = "semantic coherence") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold"))
plot_exclus <- ggplot(data = searchK_data$results, aes(x = K, y = exclus)) +
geom_line() +
geom_point() +
labs(y = "exclusivity") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold"))
plot_residual <- ggplot(data = searchK_data$results, aes(x = K, y = residual)) +
geom_line() +
geom_point() +
labs(y = "residuals") +
theme_minimal() +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold"))
pdf(file = "../plots/searchK.pdf", width = 9, height = 7.5)
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
dev.off()
pdf(file = "../plots/searchK.pdf", width = 9, height = 7.5)
gridExtra::grid.arrange(plot_heldout, plot_semcoh, plot_exclus, plot_residual, ncol=2)
dev.off()
# # choose covariates and number of topics
# covar <- "Partei+ Bundesland + s(t, df = 5) + s(Struktur_4, df = 5) +
#   s(Struktur_22, df = 5) + s(Struktur_42, df = 5) + s(Struktur_54, df = 5)"
# outcome <- ""
# prevalence <- as.formula(paste(outcome, covar, sep = "~"))
K <- 15
# load fitted model
mod_prev <- readRDS("../data/mod_prev_monthly.rds")
# load list of prevalence covariates
varlist <- c(
"t", "Partei", "Bundesland", "Struktur_4", "Struktur_22", "Struktur_42", "Struktur_54"
)
# load full names of prevalence covariates
varlist_fullnames <- c(
"Time", "Party", "Federal State", "Immigrants (%)", "GDP per capita",
"Unemployement Rate (%)", "Vote share (%)"
)
formula <- 1:15~Partei+ Bundesland + s(t, df = 5) + s(Struktur_4, df = 5) +
s(Struktur_22, df = 5) + s(Struktur_42, df = 5) + s(Struktur_54, df = 5)
# create data
prep <- stm::estimateEffect(
formula,
mod_prev,
metadata = data$meta,
uncertainty = "Global"
)
# create plot using estimateEffect and save as pdf
times <- c("2017-09", "2018-09", "2019-09")
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "Date", xaxt='n', ylab = "Topic Proportions", linecol = "black")
axis(1, at=c(0,12,24), labels=times)
times <- c("2017-09", "2018-09", "2019-09")
pdf(file = "../plots/estimateEffect_t6.pdf", width = 9, height = 7.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "Date", xaxt='n', ylab = "Topic Proportion", linecol = "black")
axis(1, at=c(0,12,24), labels=times)
dev.off()
# load previously computed results
all_betas <- readRDS("../data/all_betas.rds")
# predict thetas using beta regression for all variables
preds_beta <- lapply(varlist,
function(v) stmprevalence::predict_props(all_betas, v, formula, data$meta))
names(preds_beta) <- varlist
for(v in setdiff(varlist, c("Partei", "Bundesland"))){
plot_nam <- paste0("plot_beta_", v)
assign(plot_nam, ggplot(preds_beta[[v]]$Topic6, aes(!!as.symbol(v))) +
geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper), fill = "grey70") +
xlab(varlist_fullnames[varlist==v]) +
ylab("Topic Proportion") +
geom_line(aes(y = proportion)) +
scale_x_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")))
}
## change axis labeling for time effects
ticks_date <- data.frame(breaks = c(1,13,25), labels = 0)
for (i in ticks_date$breaks) ticks_date[ticks_date["breaks"]==i, "labels"] <-
(data$meta$Datum[which(data$meta$t == i)] %>% unique)
plot_beta_Date <- plot_beta_t +
scale_x_continuous(name = "Date", breaks = ticks_date$breaks, labels = ticks_date$labels)
## combine all plots
gridExtra::grid.arrange(
plot_beta_Date, plot_beta_Struktur_4, plot_beta_Struktur_22, plot_beta_Struktur_42, ncol=2
)
# load full names of prevalence covariates
varlist_fullnames <- c(
"Time", "Party", "Federal State", "Immigrants (%)", "GDP per capita (EUR)",
"Unemployement Rate (%)", "Vote share (%)"
)
pdf(file = "../plots/freqbeta_t6.pdf", width = 9, height = 7.5)
for(v in setdiff(varlist, c("Partei", "Bundesland"))){
plot_nam <- paste0("plot_beta_", v)
assign(plot_nam, ggplot(preds_beta[[v]]$Topic6, aes(!!as.symbol(v))) +
geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper), fill = "grey70") +
xlab(varlist_fullnames[varlist==v]) +
ylab("Topic Proportion") +
geom_line(aes(y = proportion)) +
scale_x_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")))
}
## change axis labeling for time effects
ticks_date <- data.frame(breaks = c(1,13,25), labels = 0)
for (i in ticks_date$breaks) ticks_date[ticks_date["breaks"]==i, "labels"] <-
(data$meta$Datum[which(data$meta$t == i)] %>% unique)
plot_beta_Date <- plot_beta_t +
scale_x_continuous(name = "Date", breaks = ticks_date$breaks, labels = ticks_date$labels)
## combine all plots
gridExtra::grid.arrange(
plot_beta_Date, plot_beta_Struktur_4, plot_beta_Struktur_22, plot_beta_Struktur_42, ncol=2
)
dev.off()
# load full names of prevalence covariates
varlist_fullnames <- c(
"time", "party", "federal state", "immigrants (%)", "GDP per capita (EUR)",
"unemployement rate (%)", "vote share (%)"
)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black")
axis(1, at=c(0,12,24), labels=times)
dev.off()
times <- c("2017-09", "2018-09", "2019-09")
pdf(file = "../plots/estimateEffect_t6.pdf", width = 9, height = 7.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black")
axis(1, at=c(0,12,24), labels=times)
dev.off()
times <- c("2017-09", "2018-09", "2019-09")
pdf(file = "../plots/estimateEffect_t6.pdf", width = 9, height = 7.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black", font.lab = 2)
axis(1, at=c(0,12,24), labels=times)
dev.off()
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black", font.lab = 2)
axis(1, at=c(0,12,24), labels=times, cex.axis=2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black", font.lab = 2)
axis(1, at=c(0,12,24), labels=times, cex.axis=1.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black", font.lab = 2)
axis(1, at=c(0,12,24), labels=times, cex.axis=1.5, cey.axis=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black", font.lab = 2)
axis(1, at=c(0,12,24), labels=times, cex.axis=1.5, cex.names=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt='n', ylab = "topic proportion", linecol = "black", font.lab = 2, yaxt = "n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "topic proportion", linecol = "black", font.lab = 2, yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.5)
axis(2, cex.axis=1.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "topic proportion", linecol = "black", font.lab = 2, yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "topic proportion", linecol = "black",  yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=2.2, cex=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=5, cex=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=3, cex=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=1, cex=1.2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=2.2, cex=1.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=2.2, cex=1.7, font = "bold")
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "date", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("topic proportion", side=2, line=2.2, cex=1.7, font = 2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("date", side=1, line=2.2, cex=1.7, font = 2)
mtext("topic proportion", side=2, line=2.2, cex=1.7, font = 2)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("date", side=1, line=2.5, cex=1.7, font = 2)
mtext("topic proportion", side=2, line=2.5, cex=1.7, font = 2)
times <- c("2017-09", "2018-09", "2019-09")
pdf(file = "../plots/estimateEffect_t6.pdf", width = 9, height = 7.5)
plot(prep, "t", method = "continuous", topics = 6,
printlegend = F, xlab = "", xaxt="n", ylab = "", linecol = "black", yaxt="n")
axis(1, at=c(0,12,24), labels=times, cex.axis=1.2)
axis(2, cex.axis=1.2)
mtext("date", side=1, line=2.5, cex=1.7, font = 2)
mtext("topic proportion", side=2, line=2.5, cex=1.7, font = 2)
dev.off()
pdf(file = "../plots/freqbeta_t6.pdf", width = 9, height = 7.5)
for(v in setdiff(varlist, c("Partei", "Bundesland"))){
plot_nam <- paste0("plot_beta_", v)
assign(plot_nam, ggplot(preds_beta[[v]]$Topic6, aes(!!as.symbol(v))) +
geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper), fill = "grey70") +
xlab(varlist_fullnames[varlist==v]) +
ylab("topic proportion") +
geom_line(aes(y = proportion)) +
scale_x_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")))
}
## change axis labeling for time effects
ticks_date <- data.frame(breaks = c(1,13,25), labels = 0)
for (i in ticks_date$breaks) ticks_date[ticks_date["breaks"]==i, "labels"] <-
(data$meta$Datum[which(data$meta$t == i)] %>% unique)
plot_beta_Date <- plot_beta_t +
scale_x_continuous(name = "Date", breaks = ticks_date$breaks, labels = ticks_date$labels)
## combine all plots
gridExtra::grid.arrange(
plot_beta_Date, plot_beta_Struktur_4, plot_beta_Struktur_22, plot_beta_Struktur_42, ncol=2
)
dev.off()
pdf(file = "../plots/freqbeta_t6.pdf", width = 9, height = 7.5)
for(v in setdiff(varlist, c("Partei", "Bundesland"))){
plot_nam <- paste0("plot_beta_", v)
assign(plot_nam, ggplot(preds_beta[[v]]$Topic6, aes(!!as.symbol(v))) +
geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper), fill = "grey70") +
xlab(varlist_fullnames[varlist==v]) +
ylab("topic proportion") +
geom_line(aes(y = proportion)) +
scale_x_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")))
}
## change axis labeling for time effects
ticks_date <- data.frame(breaks = c(1,13,25), labels = 0)
for (i in ticks_date$breaks) ticks_date[ticks_date["breaks"]==i, "labels"] <-
(data$meta$Datum[which(data$meta$t == i)] %>% unique)
plot_beta_Date <- plot_beta_t +
scale_x_continuous(name = "date", breaks = ticks_date$breaks, labels = ticks_date$labels)
## combine all plots
gridExtra::grid.arrange(
plot_beta_Date, plot_beta_Struktur_4, plot_beta_Struktur_22, plot_beta_Struktur_42, ncol=2
)
dev.off()
formula <- 6~Partei+ Bundesland + s(t, df = 5) + s(Struktur_4, df = 5) +
s(Struktur_22, df = 5) + s(Struktur_42, df = 5) + s(Struktur_54, df = 5)
metadata <- data$meta[varlist]
# factorize
metadata[sapply(metadata, is.character)] <- lapply(metadata[sapply(metadata, is.character)],
as.factor)
preds_beta_bayes_95 <- readRDS("../data/preds_beta_bayes_95.rds")
preds_beta_bayes_90 <- readRDS("../data/preds_beta_bayes_90.rds")
preds_beta_bayes_85 <- readRDS("../data/preds_beta_bayes_85.rds")
pdf(file = "../plots/stanbeta_t6_noCI.pdf", width = 9, height = 7.5)
for(v in setdiff(varlist, c("Partei", "Bundesland"))){
plot_nam <- paste0("plot_betabayes_", v)
assign(plot_nam, ggplot(preds_beta_bayes_95[[v]]$Topic6, aes(x = !!as.symbol(v), y = proportion)) +
geom_smooth(color = "black", method = "loess", se = FALSE, size = 0.8) +
ylab("topic proportion") +
xlab(varlist_fullnames[varlist==v]) +
scale_x_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")))
}
## change axis labeling for time effects
ticks_date <- data.frame(breaks = c(1,13,25), labels = 0)
for (i in ticks_date$breaks) ticks_date[ticks_date["breaks"]==i, "labels"] <-
(data$meta$Datum[which(data$meta$t == i)] %>% unique)
plot_betabayes_Date <- plot_betabayes_t +
scale_x_continuous(name = "date", breaks = ticks_date$breaks, labels = ticks_date$labels)
## combine all plots
gridExtra::grid.arrange(plot_betabayes_Date, plot_betabayes_Struktur_4,
plot_betabayes_Struktur_22, plot_betabayes_Struktur_42, ncol=2)
dev.off()
preds_beta_bayes_95$t$Topic6$ci_lower_90 <- preds_beta_bayes_90$t$Topic6$ci_lower
preds_beta_bayes_95$t$Topic6$ci_upper_90 <- preds_beta_bayes_90$t$Topic6$ci_upper
preds_beta_bayes_95$Struktur_4$Topic6$ci_lower_90 <- preds_beta_bayes_90$Struktur_4$Topic6$ci_lower
preds_beta_bayes_95$Struktur_4$Topic6$ci_upper_90 <- preds_beta_bayes_90$Struktur_4$Topic6$ci_upper
preds_beta_bayes_95$Struktur_22$Topic6$ci_lower_90 <- preds_beta_bayes_90$Struktur_22$Topic6$ci_lower
preds_beta_bayes_95$Struktur_22$Topic6$ci_upper_90 <- preds_beta_bayes_90$Struktur_22$Topic6$ci_upper
preds_beta_bayes_95$Struktur_42$Topic6$ci_lower_90 <- preds_beta_bayes_90$Struktur_42$Topic6$ci_lower
preds_beta_bayes_95$Struktur_42$Topic6$ci_upper_90 <- preds_beta_bayes_90$Struktur_42$Topic6$ci_upper
preds_beta_bayes_95$Struktur_54$Topic6$ci_lower_90 <- preds_beta_bayes_90$Struktur_54$Topic6$ci_lower
preds_beta_bayes_95$Struktur_54$Topic6$ci_upper_90 <- preds_beta_bayes_90$Struktur_54$Topic6$ci_upper
preds_beta_bayes_95$t$Topic6$ci_lower_85 <- preds_beta_bayes_85$t$Topic6$ci_lower
preds_beta_bayes_95$t$Topic6$ci_upper_85 <- preds_beta_bayes_85$t$Topic6$ci_upper
preds_beta_bayes_95$Struktur_4$Topic6$ci_lower_85 <- preds_beta_bayes_85$Struktur_4$Topic6$ci_lower
preds_beta_bayes_95$Struktur_4$Topic6$ci_upper_85 <- preds_beta_bayes_85$Struktur_4$Topic6$ci_upper
preds_beta_bayes_95$Struktur_22$Topic6$ci_lower_85 <- preds_beta_bayes_85$Struktur_22$Topic6$ci_lower
preds_beta_bayes_95$Struktur_22$Topic6$ci_upper_85 <- preds_beta_bayes_85$Struktur_22$Topic6$ci_upper
preds_beta_bayes_95$Struktur_42$Topic6$ci_lower_85 <- preds_beta_bayes_85$Struktur_42$Topic6$ci_lower
preds_beta_bayes_95$Struktur_42$Topic6$ci_upper_85 <- preds_beta_bayes_85$Struktur_42$Topic6$ci_upper
preds_beta_bayes_95$Struktur_54$Topic6$ci_lower_85 <- preds_beta_bayes_85$Struktur_54$Topic6$ci_lower
preds_beta_bayes_95$Struktur_54$Topic6$ci_upper_85 <- preds_beta_bayes_85$Struktur_54$Topic6$ci_upper
pdf(file = "../plots/stanbeta_t6_959085.pdf", width = 9, height = 7.5)
for(v in setdiff(varlist, c("Partei", "Bundesland"))){
plot_nam <- paste0("plot_betabayes_", v)
plot_smoothed_ci <- ggplot(preds_beta_bayes_95[[v]]$Topic6) +
stat_smooth(color=NA, aes(x = !!as.symbol(v), y = ci_lower), method = "loess", se = FALSE) +
stat_smooth(color=NA, aes(x = !!as.symbol(v), y = ci_upper), method = "loess", se = FALSE) +
stat_smooth(color=NA, aes(x = !!as.symbol(v), y = ci_lower_90), method = "loess", se = FALSE) +
stat_smooth(color=NA, aes(x = !!as.symbol(v), y = ci_upper_90), method = "loess", se = FALSE) +
stat_smooth(color=NA, aes(x = !!as.symbol(v), y = ci_lower_85), method = "loess", se = FALSE) +
stat_smooth(color=NA, aes(x = !!as.symbol(v), y = ci_upper_85), method = "loess", se = FALSE)
smoothed_ci <- ggplot_build(plot_smoothed_ci)
df_smoothed_ci <- data.frame(v = smoothed_ci$data[[1]]$x,
ci_lower = smoothed_ci$data[[1]]$y,
ci_upper = smoothed_ci$data[[2]]$y,
ci_lower_90 = smoothed_ci$data[[3]]$y,
ci_upper_90 = smoothed_ci$data[[4]]$y,
ci_lower_85 = smoothed_ci$data[[5]]$y,
ci_upper_85 = smoothed_ci$data[[6]]$y)
assign(plot_nam, plot_smoothed_ci +
geom_ribbon(data = df_smoothed_ci, aes(x = v, ymin = ci_lower, ymax = ci_upper),
fill = "grey80") +
geom_ribbon(data = df_smoothed_ci, aes(x = v, ymin = ci_lower_90, ymax = ci_upper_90),
fill = "grey60") +
geom_ribbon(data = df_smoothed_ci, aes(x = v, ymin = ci_lower_85, ymax = ci_upper_85),
fill = "grey40") +
geom_smooth(data = preds_beta_bayes_95[[v]]$Topic6, aes(x = !!as.symbol(v), y = proportion),
color = "black", method = "loess", se = FALSE, size = 0.8) +
ylab("topic proportion") +
xlab(varlist_fullnames[varlist==v]) +
scale_x_continuous(labels = scales::comma) +
theme(axis.text.x = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.x = element_text(size = 18, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, hjust = 1),
axis.title.y = element_text(size = 18, face = "bold")))
}
## change axis labeling for time effects
ticks_date <- data.frame(breaks = c(1,13,25), labels = 0)
for (i in ticks_date$breaks) ticks_date[ticks_date["breaks"]==i, "labels"] <-
(data$meta$Datum[which(data$meta$t == i)] %>% unique)
plot_betabayes_Date <- plot_betabayes_t +
scale_x_continuous(name = "date", breaks = ticks_date$breaks, labels = ticks_date$labels)
## combine all plots
gridExtra::grid.arrange(plot_betabayes_Date, plot_betabayes_Struktur_4,
plot_betabayes_Struktur_22, plot_betabayes_Struktur_42, ncol=2)
dev.off()
pdf(file = "../plots/wordcloud_t6.pdf", width = 9, height = 7.5)
stm::cloud(mod_prev, topic = 6, scale = c(2.0, 0.25))
dev.off()
pdf(file = "../plots/wordcloud_t6.pdf", width = 3, height = 2.5)
stm::cloud(mod_prev, topic = 6, scale = c(2.0, 0.25))
dev.off()
pdf(file = "../plots/wordcloud_t6.pdf", width = 3.6, height = 3)
stm::cloud(mod_prev, topic = 6, scale = c(2.0, 0.25))
dev.off()
